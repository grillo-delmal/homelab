- name: Retrieve info from {{ container.ns_name }}.{{ general.domain }}
  community.general.proxmox_vm_info:
    node: '{{ host_proxmox.node }}'
    vmid: '{{ container.vmid }}'
    api_host: '{{ host_proxmox.host }}'
    api_user: '{{ host_proxmox.user }}'
    api_password: "{{ host_proxmox.password }}"
    config: current
  register:
    _proxmox_lxc_vm_info

- name: Container {{ container.ns_name }}.{{ general.domain }} created
  when: _proxmox_lxc_vm_info.proxmox_vms | length == 0
  vars:
    default_net:
      net0: "name=eth0,gw={{ general.gateway }},ip={{ container.ansible_host }}/24,bridge=vmbr0"
  community.general.proxmox:
    vmid: '{{ container.vmid }}'
    node: '{{ host_proxmox.node }}'
    api_host: '{{ host_proxmox.host }}'
    api_user: '{{ host_proxmox.user }}'
    api_password: "{{ host_proxmox.password }}"
    hostname: "{{ container.ns_name }}.{{ general.domain }}"
    ostemplate: "{{ container.ostemplate | default('local:vztmpl/fedora-41-default_20241118_amd64.tar.xz') }}"
    pubkey: "{{ host_general.pubkey | default(omit) }}"
    password: "{{ container.password | default(host_proxmox.password) }}"
    disk: '{{ container.disk | default(omit) }}'
    mounts: '{{ container.mounts | default(omit) }}'
    mount_volumes: '{{ container.mount_volumes | default(omit) }}'
    netif: '{{ container.netif | default(default_net) }}'
    cores: '{{ container.cores | default(omit) }}'
    memory: '{{ container.memory | default(omit) }}'
    swap: 0
    unprivileged: '{{ container.unprivileged | default(omit) }}'
    features: '{{ container.features | default(omit) }}'
    onboot: True
    state: present

- name: Container {{ container.ns_name }}.{{ general.domain }} updated
  when: _proxmox_lxc_vm_info.proxmox_vms | length > 0
  vars:
    default_net:
      net0: "name=eth0,gw={{ general.gateway }},ip={{ container.ansible_host }}/24,bridge=vmbr0"
  community.general.proxmox:
    vmid: '{{ container.vmid }}'
    node: '{{ host_proxmox.node }}'
    api_host: '{{ host_proxmox.host }}'
    api_user: '{{ host_proxmox.user }}'
    api_password: "{{ host_proxmox.password }}"
    hostname: "{{ container.ns_name }}.{{ general.domain }}"
    pubkey: "{{ host_general.pubkey | default(omit) }}"
    password: "{{ container.password | default(host_proxmox.password) }}"
    disk: '{{ container.disk | default(omit) }}'
    # mounts: '{{ container.mounts | default(omit) }}'
    # mount_volumes: '{{ container.mount_volumes | default(omit) }}'
    netif: '{{ container.netif | default(default_net) }}'
    cores: '{{ container.cores | default(omit) }}'
    memory: '{{ container.memory | default(omit) }}'
    swap: 0
    unprivileged: '{{ container.unprivileged | default(omit) }}'
    features: '{{ container.features | default(omit) }}'
    onboot: True
    update: true

- name: Container {{ container.ns_name }}.{{ general.domain }} is running
  community.general.proxmox:
    vmid: '{{ container.vmid }}'
    api_host: '{{ host_proxmox.host }}'
    api_user: '{{ host_proxmox.user }}'
    api_password: "{{ host_proxmox.password }}"
    state: started

- name: Check if ansible is installed on {{ container.ns_name }}.{{ general.domain }}
  ansible.builtin.shell: pct exec {{ container.vmid }} -- dnf list --installed -q openssh-server
  register: result
  ignore_errors: True
  changed_when: False

- name: Install ansible on {{ container.ns_name }}.{{ general.domain }}
  ansible.builtin.shell: |
    pct push {{ container.vmid }} /opt/setup.sh /opt/setup.sh
    pct exec {{ container.vmid }} -- chmod +x /opt/setup.sh
    pct exec {{ container.vmid }} -- /opt/setup.sh
  when: result is failed
