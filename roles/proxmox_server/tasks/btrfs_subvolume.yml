---

- name: Submodule {{ storage_btrfs_path }}{{ storage_data.path }} is created
  community.general.btrfs_subvolume:
    name: '{{ storage_data.path }}'

- name: Set propper permissions to {{ storage_btrfs_path }}{{ storage_data.path }}
  ansible.builtin.file:
    path: '{{ storage_btrfs_path }}{{ storage_data.path }}'
    state: directory
    owner: '{{ 100000 + (storage_data.uid | default(0)) }}'
    group: '{{ 100000 + (storage_data.gid | default(0)) }}'
    mode: '{{ storage_data.mode | default("0775") }}'

- name: Get current qgroup
  shell: "btrfs qgroup show -reF --iec {{ storage_btrfs_path }}{{ storage_data.path }} | sed -n 3p | awk '{print $1}'"
  register: qgroupid
  changed_when: False
  
- name: Get current size
  shell: "btrfs qgroup show -reF --iec {{ storage_btrfs_path }}{{ storage_data.path }} | sed -n 3p | awk '{print $4}'"
  register: max_referenced
  changed_when: False
  
- name: Get configured size
  shell: "echo {{ storage_data.size }} | numfmt --from=iec"
  register: expected_size
  changed_when: False
  when: "'size' in storage_data"

- name: Resize on existing size config {{ qgroupid.stdout }}
  shell: "btrfs qgroup limit {{ storage_data.size }} {{ qgroupid.stdout }} {{ storage_btrfs_path }}{{ storage_data.path }}"
  changed_when: False
  when: "'size' in storage_data and (
      ( max_referenced.stdout | int ) != ( expected_size.stdout | int )
    )"

- name: No limit when no size config
  shell: "btrfs qgroup limit 'none' {{ qgroupid.stdout }} {{ storage_btrfs_path }}{{ storage_data.path }}"
  changed_when: False
  when: "'size' not in storage_data and ( 
      max_referenced.stdout != 'none' 
    )"