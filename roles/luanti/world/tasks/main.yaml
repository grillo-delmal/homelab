---

- name: set minetest home valiable
  set_fact:
    mine_sysconfig: "/etc/sysconfig/minetest/{{ world.id }}.conf"
    mine_config: "/etc/minetest/{{ world.id }}.conf"

- name: Check if game path exists
  stat:
    path: "{{ mine_home }}/.minetest/games/{{ game.name }}/game.conf"
  register: game_path

- name: Game is available
  unarchive:
    src: "{{ game.url }}"
    dest: "{{ mine_home }}/.minetest/games/"
    owner: minetest
    group: minetest
    remote_src: yes
  when: not game_path.stat.exists and not ansible_check_mode

- name: World mods folder must exist
  ansible.builtin.file:
    path: "{{ mine_home }}/{{ world.id }}/worldmods/{{( item.dir_name | default('') )}}"
    owner: minetest
    group: minetest
    state: directory
    mode: '0755'
  loop: "{{ game.mods }}"

- name: Mods are available
  include_tasks: mods.yaml
  loop: "{{ game.mods }}"
  when: "'mods' in game and not ansible_check_mode"

- name: Configure port
  ansible.builtin.copy:
    content: |
      PORT={{ world.port }}
      GAMEID={{ game.name }}
    dest: "{{ mine_sysconfig }}"
  notify:
    - 'luanti/world : Restart minetest service'

- name: Upload the minetest.conf file
  template:
    src: minetest.conf.j2
    dest: "{{ mine_config }}"
    owner: minetest
    group: minetest
    backup: yes
  notify:
    - 'luanti/world : Restart minetest service'

- name: Restart service
  service:
    name: minetest@{{ world.id }}.service
    enabled: true
    state: started
    
- block:
  - name: Configure mapserver port
    template:
      src: mapserver.json.j2
      dest: "{{ mine_home }}/{{ world.id }}/mapserver.json"
      owner: minetest
      group: minetest
    notify:
      - 'luanti/mapserver : Restart mapserver service'

  - name: Wait for world to exist
    ansible.builtin.wait_for:
      path: "{{ mine_home }}/{{ world.id }}/map.sqlite"
      state: present

  - name: Start Minetest-mapserver
    service:
      name: mapserver@{{ world.id }}.service
      enabled: true
      state: started

  when: mapserver is defined

