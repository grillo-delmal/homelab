---

- name: Prepare services
  dnf:
    name:
    - bind
    state: present

- name: Configure bind
  template:
    src: named.conf.j2
    dest: /etc/named.conf

- name: Check if raw zone changes
  template:
    src: main.zone.j2
    dest: /var/raw.main.zone
  vars:
    serial: '0'
  register: raw_zone

- name: Create real zone
  template:
    src: main.zone.j2
    dest: /var/named/{{ domain }}.zone
  vars:
    serial: '{{ ansible_date_time.year }}{{ "%02d" % ( ansible_date_time.month | int ) }}{{ "%02d" % ( ansible_date_time.day | int ) }}{{ "%02d" % ( ansible_date_time.hour | int ) }}'
  when: raw_zone is changed

- name: Get public IP
  ipify_facts:
    timeout: 15
  tags: ddns

- name: Add raw DNS result to CloudFlare
  cloudflare_dns:
    zone: "{{ base_domain_name }}"
    record: "{{ domain_name }}"
    type: A
    value: "{{ ipify_public_ip }}"
    api_token: "{{ cloudflare_token }}"
    proxied: "no"
    solo: "yes"
    state: present

- name: Check if raw public zone changes
  template:
    src: main.public.zone.j2
    dest: /var/raw.main.public.zone
  vars:
    serial: '0'
    public_ip: "{{ ipify_public_ip }}"
  register: raw_public_zone

- name: Create real zone
  template:
    src: main.public.zone.j2
    dest: /var/named/{{ domain }}.public.zone
  vars:
    serial: '{{ ansible_date_time.year }}{{ "%02d" % ( ansible_date_time.month | int ) }}{{ "%02d" % ( ansible_date_time.day | int ) }}{{ "%02d" % ( ansible_date_time.hour | int ) }}'
    public_ip: "{{ ipify_public_ip }}"
  when: raw_public_zone is changed

- name: Reload BIND config
  systemd:
    name: named.service
    state: restarted
    enabled: True
  when: raw_public_zone is changed or raw_zone is changed

- name: BIND is started
  systemd:
    name: named.service
    state: started
    enabled: True

