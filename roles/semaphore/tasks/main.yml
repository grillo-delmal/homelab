---

- name: Enable COPR on dnf
  ansible.builtin.dnf:
    name:
      - dnf
      - dnf-plugins-core

- name: Enable semaphore grillo-delmal/semaphore
  community.general.copr:
    host: copr.fedorainfracloud.org
    state: enabled
    name: grillo-delmal/semaphore

- name: Install semaphore and deps
  ansible.builtin.dnf:
    name:
      - semaphore
      - git
      - ansible-collection-community-general
      - python3-jmespath

- name: Add semaphoreui-alt.service
  ansible.builtin.copy:
    src: semaphoreui-alt.service
    dest: /usr/lib/systemd/system/semaphoreui-alt.service
    force: true
    mode: '0644'
  register: add_service_result

- name: Just force systemd to reread configs
  ansible.builtin.systemd_service:
    daemon_reload: true
  when: add_service_result is changed

- name: Check that var folder exists
  ansible.builtin.file:
    path: "/var/lib/semaphore"
    state: directory
    owner: semaphore
    group: semaphore
    mode: '0750'

- name: Make sure permissions are fine
  ansible.builtin.file:
    dest: /var/lib/semaphore
    owner: semaphore
    group: semaphore
    recurse: true

- name: Check if config.json exists
  ansible.builtin.stat:
    path: '/var/lib/semaphore'
  register: config_file

- name: Initialize semaphore
  when: "'stat' in config_file and not config_file.stat.exists"
  block:
    - name: Copy input template
      ansible.builtin.template:
        src: semaphore.stdin.j2
        owner: semaphore
        group: semaphore
        mode: '0640'
        dest: /opt/semaphore.stdin
    - name: Run setup
      ansible.builtin.shell: >-
        sudo -u semaphore
        semaphore setup
        --config /var/lib/semaphore/config.json
        < /opt/semaphore.stdin
      changed_when: true
    - name: Remove stdin file
      ansible.builtin.file:
        path: "/opt/semaphore.stdin"
        state: absent

- name: Start semaphoreui service
  ansible.builtin.service:
    name: semaphoreui-alt.service
    enabled: true
    state: started
