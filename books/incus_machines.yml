---

- hosts: machines
  vars:
    general:
      pubkey: "{{ ssh_pub_keys[0] }}"
      gateway: "{{ gateway_ip }}"
      domain: "{{ domain_name }}"
      pub_keys: "{{ ssh_pub_keys }}"

    storage_src: |
      {{
        groups['containers'] |
          map('extract', hostvars) |
          selectattr('parent_machine', 'equalto', hostname) |
          map('dict2items') |
          map('selectattr', 'key', 'in', ['storage_mnt']) |
          map('items2dict') |
          community.general.json_query('[*].storage_mnt') |
          flatten
      }}

  roles:
    - role: cockpit
    - role: letsencrypt
    - role: incus

  tasks:
    - name: Pepare folders
      ansible.builtin.include_role:
        name: incus
        tasks_from: storage_paths
      loop: "{{
        groups['containers'] |
          map('extract', hostvars) |
          selectattr('parent_machine', 'equalto', hostname) |
          community.general.json_query('[*].storage_mnt[*].path') |
          default([], true) | flatten }}"
      loop_control:
        loop_var: mount_data_path

    - name: List existing containers
      shell: incus list -c n -f csv | grep "ct-"
      register: existing_containers
      changed_when: false

    - name: Build containers
      ansible.builtin.include_role:
        name: incus
        tasks_from: container
      loop: "{{
        groups['containers'] |
          map('extract', hostvars) |
          selectattr('parent_machine', 'equalto', hostname) |
          map('dict2items') |
          map(
            'selectattr', 'key', 'in', [
              'hostname',
              'ansible_host',
              'visible_host',
              'internal_host',
              'storage_mnt',
              'incus_config'
            ]
          ) |
          map('items2dict')
         }}"
      loop_control:
        loop_var: container
      when: ('ct-' + container.hostname) not in existing_containers.stdout_lines
